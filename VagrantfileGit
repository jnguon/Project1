# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.


Vagrant.configure("2") do |config|

# Run backup on both virtual machines: box1 and box2

  config.vm.provision "shell", path: "backup_script.sh"

  config.vm.define "box1" do |box1|
       #box1.vm.provision "shell", inline: <<-SHELL
        #        sudo apt-get update
        #       SHELL
        box1.vm.box="ubuntu/trusty64"
        box1.vm.network :forwarded_port, guest: 22, host: 10124, id: "ssh"
        box1.vm.network :private_network, ip: "192.168.56.101"
        box1.vm.provider :virtualbox do |v|
        v.customize ["modifyvm", :id, "--memory", 1020]
       end
       end

  config.vm.define "box2" do |box2|
        #box2.vm.provision "shell", path: "backup_script.sh"
                 #sudo apt-get install -y nginx
                 #SHELL
         box2.vm.box="scotch/box"
         box2.vm.network :forwarded_port, guest: 22, host: 10223, id: "ssh"
         box2.vm.network :private_network, ip: "192.168.56.102"
        end

  config.vm.define "new_box" do |new_box|
          new_box.vm.provision "shell", path: "apache_script.sh"

          new_box.vm.box="ubuntu/trusty64"
          new_box.vm.network :forwarded_port, guest: 22, host: 10224, id: "ssh"
          new_box.vm.network :private_network, ip: "192.168.56.103"
          end
  config.vm.define "ubuntu_server" do |ubuntu_server|
          ubuntu_server.vm.box="ubuntu/trusty64"
          ubuntu_server.vm.network :forwarded_port, guest: 22, host: 10225, id: "ssh"
          ubuntu.server.network :private_network, ip: "192.168.56.104"
          ubuntu.server.vm.hostname='ubuntuserver'
          end

end

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
